export const BASE_OCLR_Abi = [
  { inputs: [], stateMutability: "nonpayable", type: "constructor" },
  { inputs: [], name: "AccessDenied", type: "error" },
  { inputs: [], name: "IsNotPaused", type: "error" },
  { inputs: [], name: "IsPaused", type: "error" },
  {
    inputs: [{ internalType: "string", name: "item", type: "string" }],
    name: "RegistryItemMissing",
    type: "error",
  },
  { inputs: [], name: "UndefinedAddress", type: "error" },
  {
    inputs: [{ internalType: "string", name: "paramName", type: "string" }],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint8", name: "version", type: "uint8" },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "from", type: "address" },
          { internalType: "address", name: "to", type: "address" },
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "bool", name: "isFeeInXeq", type: "bool" },
          { internalType: "address[]", name: "vaults", type: "address[]" },
          { internalType: "uint256[]", name: "amounts", type: "uint256[]" },
          { internalType: "bytes", name: "arbCallData", type: "bytes" },
        ],
        indexed: false,
        internalType: "struct IMarketplace.SwapArgs",
        name: "swapArgs",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSpent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isFeeInXeq",
        type: "bool",
      },
    ],
    name: "PropertyBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          { internalType: "address", name: "from", type: "address" },
          { internalType: "address", name: "to", type: "address" },
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "bool", name: "isFeeInXeq", type: "bool" },
          { internalType: "address[]", name: "vaults", type: "address[]" },
          { internalType: "uint256[]", name: "amounts", type: "uint256[]" },
          { internalType: "bytes", name: "arbCallData", type: "bytes" },
        ],
        indexed: false,
        internalType: "struct IMarketplace.SwapArgs",
        name: "swapArgs",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isFeeInXeq",
        type: "bool",
      },
    ],
    name: "PropertySold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_BASED_POINT",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessController",
    outputs: [
      { internalType: "contract IAccessController", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "from", type: "address" },
          { internalType: "address", name: "to", type: "address" },
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "bool", name: "isFeeInXeq", type: "bool" },
          { internalType: "address[]", name: "vaults", type: "address[]" },
          { internalType: "uint256[]", name: "amounts", type: "uint256[]" },
          { internalType: "bytes", name: "arbCallData", type: "bytes" },
        ],
        internalType: "struct IMarketplace.SwapArgs",
        name: "_swapArgs",
        type: "tuple",
      },
      { internalType: "address", name: "_marketplace", type: "address" },
    ],
    name: "buyProperty",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "passkeyWallet", type: "address" },
      {
        components: [
          { internalType: "bytes", name: "callData", type: "bytes" },
          { internalType: "bytes", name: "passkeySignature", type: "bytes" },
          { internalType: "bytes", name: "ecdsaSignature", type: "bytes" },
        ],
        internalType: "struct IPasskeyWallet.Transaction",
        name: "txn",
        type: "tuple",
      },
    ],
    name: "callPasskeyWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "passkeyWallet", type: "address" },
      { internalType: "bytes[]", name: "txns", type: "bytes[]" },
      { internalType: "uint256", name: "nonce", type: "uint256" },
      { internalType: "uint256", name: "deadline", type: "uint256" },
      { internalType: "bytes", name: "passkeySignature", type: "bytes" },
      { internalType: "bytes", name: "ecdsaSignature", type: "bytes" },
    ],
    name: "executeBatchPasskeyWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_marketplace", type: "address" },
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "amountOfTokens", type: "uint256" },
    ],
    name: "getPropertyPriceWithFees",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSystemRegistry",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISystemRegistry",
        name: "_systemRegistry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "from", type: "address" },
          { internalType: "address", name: "to", type: "address" },
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "bool", name: "isFeeInXeq", type: "bool" },
          { internalType: "address[]", name: "vaults", type: "address[]" },
          { internalType: "uint256[]", name: "amounts", type: "uint256[]" },
          { internalType: "bytes", name: "arbCallData", type: "bytes" },
        ],
        internalType: "struct IMarketplace.SwapArgs",
        name: "_swapArgs",
        type: "tuple",
      },
      { internalType: "address", name: "_marketplace", type: "address" },
    ],
    name: "sellProperty",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "newImplementation", type: "address" },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "newImplementation", type: "address" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;
